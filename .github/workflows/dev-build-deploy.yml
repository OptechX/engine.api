# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: DEV BUILD DEPLOY

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

env:
  DOCKER_BUILD_VERSION: 0.2-rc.1a

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore ./api.engine-v2.sln
    - name: Build
      run: dotnet build --no-restore ./api.engine-v2.sln
    - name: Test
      run: dotnet test --no-build --verbosity normal ./api.engine-v2.sln

  docker-build:
    needs: [ "build" ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Docker Local Build
      run: |
        docker build --rm --no-cache --tag repasscloud/optechx.api.engine:test --file Dockerfile.local .

  deploy:
    needs: [ "build", "docker-build" ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Login to Dockerhub
      run: |
        echo -e "3sFVrUGxt7HbrbBUbB2kX9UBQWcA" | docker login -u danijeljw --password-stdin
    - name: Build docker image
      run: |
        docker build --rm --no-cache --tag "repasscloud/optechx.api.engine:$DOCKER_BUILD_VERSION" --file Dockerfile.local .
        docker tag "repasscloud/optechx.api.engine:$DOCKER_BUILD_VERSION" "repasscloud/optechx.api.engine"
    - name: Push to Dockerhub
      run: |
        docker image push "repasscloud/optechx.api.engine:$DOCKER_BUILD_VERSION"
        docker image push "repasscloud/optechx.api.engine"
    - name: Setup SSH
      run: |
        chmod 700 ./secrets
        chmod 400 ./secrets/user_host_rsa
    - name: Update pub-dev server
      run: |
        ssh -o "StrictHostKeyChecking=no" -i ./secrets/user_host_rsa admin-rpc@nyc-01.2qid.com 'docker compose down; docker network prune --force; docker network create web; docker network create --internal caddy_internal; docker rmi repasscloud/optechx.api.engine; docker compose up -d'
    - name: Update dev server
      run: |
        ssh -o "StrictHostKeyChecking=no" -i ./secrets/user_host_rsa admin-rpc@nyc-01.2qid.com 'docker compose down; docker network prune --force; docker network create web; docker network create --internal caddy_internal; docker rmi repasscloud/optechx.api.engine; docker compose up -d'

  pull-request:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Update dependencies
        run: |
          npx -p npm-check-updates ncu -u
          npm install
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
            token: ${{ secrets.PAT }}
            commit-message: Update dependencies
            title: Update dependencies
            body: |
              - Dependency updates
  
              Auto-generated by [create-pull-request][1]
  
              [1]: https://github.com/peter-evans/create-pull-request
            branch: main